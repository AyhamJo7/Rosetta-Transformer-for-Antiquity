[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rosetta"
version = "0.1.0"
description = "A Transformer-based toolkit for the analysis and decipherment of ancient languages."
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
# Dependencies will be managed via requirements.in files and pip-tools
dependencies = []

[project.urls]
"Homepage" = "https://github.com/AyhamJo7/Rosetta-Transformer-for-Antiquity"
"Bug Tracker" = "https://github.com/AyhamJo7/Rosetta-Transformer-for-Antiquity/issues"

[project.scripts]
rosetta = "rosetta.cli:main"

[tool.setuptools.packages.find]
where = ["rosetta"]

# --- LINTING & FORMATTING ---

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    "C901", # complexity
    "B007", # unused loop variable
    "B904", # exception handling
    "F841", # unused variable
    "C401", # unnecessary generator
    "C403", # unnecessary list comprehension
    "E722", # bare except
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["rosetta"]

# --- STATIC TYPE CHECKING ---

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
# Add paths to check
files = ["rosetta", "tests"]
